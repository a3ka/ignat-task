{"ast":null,"code":"// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState(key, state) {\n  const stateAsString = JSON.stringify(state);\n  localStorage.setItem(key, stateAsString);\n} // и вот вам функция для получения сохранённого объекта в памяти браузера:\n\nexport function restoreState(key, defaultState) {\n  let state = defaultState;\n  const stateAsString = localStorage.getItem(key);\n  if (stateAsString !== null) state = JSON.parse(stateAsString);\n  return state;\n} // ---------------------------------------------------------------------------------------------------------------\n// пример использования:\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState('test', {\n  x: 'A',\n  y: 1\n}); // получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\n\nconst state = restoreState('test', {\n  x: '',\n  y: 0\n});","map":{"version":3,"sources":["/home/aka/Documents/IgnatHomeWork/ignat-task/src/p2-homeworks/h6/localStorage/localStorage.ts"],"names":["saveState","key","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,SAAT,CAAsBC,GAAtB,EAAmCC,KAAnC,EAA6C;AAChD,QAAMC,aAAa,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAtB;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBN,GAArB,EAA0BE,aAA1B;AACH,C,CAED;;AACA,OAAO,SAASK,YAAT,CAAyBP,GAAzB,EAAsCQ,YAAtC,EAAuD;AAC1D,MAAIP,KAAK,GAAGO,YAAZ;AACA,QAAMN,aAAa,GAAGG,YAAY,CAACI,OAAb,CAAqBT,GAArB,CAAtB;AACA,MAAIE,aAAa,KAAK,IAAtB,EAA4BD,KAAK,GAAGE,IAAI,CAACO,KAAL,CAAWR,aAAX,CAAR;AAC5B,SAAOD,KAAP;AACH,C,CAED;AACA;;AAMA;AACAF,SAAS,CAAY,MAAZ,EAAoB;AAACY,EAAAA,CAAC,EAAE,GAAJ;AAASC,EAAAA,CAAC,EAAE;AAAZ,CAApB,CAAT,C,CAEA;;AACA,MAAMX,KAAgB,GAAGM,YAAY,CAAY,MAAZ,EAAoB;AAACI,EAAAA,CAAC,EAAE,EAAJ;AAAQC,EAAAA,CAAC,EAAE;AAAX,CAApB,CAArC","sourcesContent":["// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n"]},"metadata":{},"sourceType":"module"}