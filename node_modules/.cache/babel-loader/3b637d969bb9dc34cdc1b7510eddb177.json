{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/IgnatHomeWork/ignat-task/src/p2-homeworks/h3/GreetingContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Greeting from './Greeting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer = _ref => {\n  _s();\n\n  let {\n    users,\n    addUserCallback\n  } = _ref;\n  // деструктуризация пропсов\n  const [name, setName] = useState(''); // need to fix any\n\n  const [error, setError] = useState(''); // need to fix any\n  // const [totalUsers, setTotalUsers] = useState<number>(0) // need to fix\n\n  const setNameCallback = e => {\n    // need to fix any\n    if (e.currentTarget.value !== \" \") {\n      setName(e.currentTarget.value); // need to fix\n\n      setError(\"\");\n    } else {\n      setName('');\n      setError('Enter a name');\n    }\n  };\n\n  const addUser = () => {\n    if (name !== '') {\n      alert(`Hello ${name} !`);\n      addUserCallback(name); // setTotalUsers(users.length)\n\n      setName('');\n      setError(''); // console.log('Name: ' + name)\n      // console.log('Error: ' + error)\n    } else {\n      setError('Enter a name');\n    }\n  };\n\n  const totalUsers = users.length - 1;\n  return /*#__PURE__*/_jsxDEV(Greeting, {\n    name: name,\n    setNameCallback: setNameCallback,\n    addUser: addUser,\n    error: error,\n    totalUsers: totalUsers\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GreetingContainer, \"Mg8nc8Hx6w0hPt/33E6mVppDUgo=\");\n\n_c = GreetingContainer;\nexport default GreetingContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GreetingContainer\");","map":{"version":3,"sources":["/home/aka/Documents/IgnatHomeWork/ignat-task/src/p2-homeworks/h3/GreetingContainer.tsx"],"names":["React","useState","Greeting","GreetingContainer","users","addUserCallback","name","setName","error","setError","setNameCallback","e","currentTarget","value","addUser","alert","totalUsers","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAQA;AACA;AAEA;AACA;AACA,MAAMC,iBAAuD,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAA6B;AAAE;AAC5F,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAS,EAAT,CAAhC,CAD0F,CAC7C;;AAC7C,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAS,EAAT,CAAlC,CAF0F,CAE3C;AAC/C;;AAEA,QAAMS,eAAe,GAAIC,CAAD,IAAsC;AAAE;AAC5D,QAAIA,CAAC,CAACC,aAAF,CAAgBC,KAAhB,KAA0B,GAA9B,EAAmC;AAC/BN,MAAAA,OAAO,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAP,CAD+B,CACA;;AAC/BJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHF,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,cAAD,CAAR;AACH;AACJ,GARD;;AAUA,QAAMK,OAAO,GAAG,MAAM;AAClB,QAAIR,IAAI,KAAI,EAAZ,EAAe;AACXS,MAAAA,KAAK,CAAE,SAAQT,IAAK,IAAf,CAAL;AACAD,MAAAA,eAAe,CAACC,IAAD,CAAf,CAFW,CAGX;;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR,CALW,CAMX;AACA;AACH,KARD,MAQO;AACHA,MAAAA,QAAQ,CAAC,cAAD,CAAR;AACH;AAEJ,GAbD;;AAeA,QAAMO,UAAU,GAAGZ,KAAK,CAACa,MAAN,GAAe,CAAlC;AAEA,sBACI,QAAC,QAAD;AACI,IAAA,IAAI,EAAEX,IADV;AAEI,IAAA,eAAe,EAAEI,eAFrB;AAGI,IAAA,OAAO,EAAEI,OAHb;AAII,IAAA,KAAK,EAAEN,KAJX;AAKI,IAAA,UAAU,EAAEQ;AALhB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAzCD;;GAAMb,iB;;KAAAA,iB;AA2CN,eAAeA,iBAAf","sourcesContent":["import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n    // const [totalUsers, setTotalUsers] = useState<number>(0) // need to fix\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        if (e.currentTarget.value !== \" \") {\n            setName(e.currentTarget.value) // need to fix\n            setError(\"\")\n        } else {\n            setName('')\n            setError('Enter a name')\n        }\n    }\n\n    const addUser = () => {\n        if (name !==''){\n            alert(`Hello ${name} !`)\n            addUserCallback(name)\n            // setTotalUsers(users.length)\n            setName('')\n            setError('')\n            // console.log('Name: ' + name)\n            // console.log('Error: ' + error)\n        } else {\n            setError('Enter a name')\n        }\n\n    }\n\n    const totalUsers = users.length - 1\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n"]},"metadata":{},"sourceType":"module"}