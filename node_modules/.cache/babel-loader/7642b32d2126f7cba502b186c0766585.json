{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/IgnatHomeWork/ignat-task/src/p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SuperSelect = _ref => {\n  let {\n    options,\n    onChange,\n    onChangeOption,\n    ...restProps\n  } = _ref;\n  // const mappedOptions: any[] = []; // map options with key\n  const mappedOptions = options ? options.map((el, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: el,\n    children: el\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this)) : [];\n\n  const onChangeCallback = e => {\n    // onChange, onChangeOption\n    // console.log(e.currentTarget.value)\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    onChange ? onChange(e.currentTarget.value) : '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: onChangeCallback,\n    ...restProps,\n    children: mappedOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SuperSelect;\nexport default SuperSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuperSelect\");","map":{"version":3,"sources":["/home/aka/Documents/IgnatHomeWork/ignat-task/src/p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx"],"names":["React","SuperSelect","options","onChange","onChangeOption","restProps","mappedOptions","map","el","i","onChangeCallback","e","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,MAA0E,OAA1E;;;AASA,MAAMC,WAA2C,GAAG,QAM/C;AAAA,MALD;AACIC,IAAAA,OADJ;AAEIC,IAAAA,QAFJ;AAEcC,IAAAA,cAFd;AAGI,OAAGC;AAHP,GAKC;AACD;AAEA,QAAMC,aAAoB,GAAGJ,OAAO,GAAGA,OAAO,CAACK,GAAR,CAAY,CAACC,EAAD,EAAKC,CAAL,kBAC/C;AAAQ,IAAA,KAAK,EAAED,EAAf;AAAA,cAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA,UADmC,CAAH,GAE/B,EAFL;;AAMA,QAAME,gBAAgB,GAAIC,CAAD,IAAuC;AAC5D;AACA;AACA;AACAR,IAAAA,QAAQ,GAAEA,QAAQ,CAACQ,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAV,GAAoC,EAA5C;AAEH,GAND;;AAQA,sBACI;AAAQ,IAAA,QAAQ,EAAEH,gBAAlB;AAAA,OAAwCL,SAAxC;AAAA,cACKC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA9BD;;KAAML,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    // const mappedOptions: any[] = []; // map options with key\n\n    const mappedOptions: any[] = options ? options.map((el, i) => (\n        <option value={el}>{el}</option>\n    )) : []\n\n\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n        // console.log(e.currentTarget.value)\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        onChange? onChange(e.currentTarget.value) : ''\n\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n\n\n    )\n}\n\nexport default SuperSelect\n"]},"metadata":{},"sourceType":"module"}